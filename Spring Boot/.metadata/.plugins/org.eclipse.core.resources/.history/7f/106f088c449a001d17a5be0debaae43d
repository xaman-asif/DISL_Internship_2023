package io.javabrains.springbootquickstart.lesson;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class LessonService {
	
	@Autowired
	private LessonRepository lessonRepository;
	
	public List <Lesson> getAllLessons(String courseId) {
		//return topics;
		List<Lesson> lessons = new ArrayList<>();
		lessonRepository.findByCourseId(courseId).forEach(lessons::add);
		return lessons;
	}
	
	public Lesson getLesson(String id) {
		//return topics.stream().filter(topic -> topic.getId().equalsIgnoreCase(id)).findFirst().get();
		return lessonRepository.findById(id).orElse(null);
	}

	public Lesson addLesson(Lesson lesson) {
		System.out.println("Lesson Added Successfully");
		return lessonRepository.save(lesson);
	}

	public Lesson updateLesson(Lesson lesson) {
//		for (int i=0; i < topics.size(); i++) {
//			Topic temp = topics.get(i);
//			if(temp.getId().equals(id)) {
//				topics.set(i, topic);
//				return;
//			}
//		}
//		System.out.println("Course Updated Successfully");
		return lessonRepository.save(lesson);
	}

	public void deleteLesson(String id) {
//		for (int i = 0; i < topics.size(); i++) {
//			Topic temp = topics.get(i);
//			if(temp.getId().equals(id)) {
//				topics.remove(i);
//			}
//		}
		lessonRepository.deleteById(id);
	}

	public List<Lesson> getAllLessons() {
		List<Lesson> lessons = new ArrayList<>();
//		courseRepository.findByTopicId(topicId).forEach(courses::add);
		lessonRepository.findAll().forEach(lessons::add);
		return lessons;
	}
}
